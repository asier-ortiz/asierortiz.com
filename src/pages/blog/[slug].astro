---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import Button from '@/components/Button/Button.astro';
import SocialShare from '@/components/Social/SocialShare.astro';
import PostImage from '@/components/Media/PostImage.astro';
import siteData from '@/config/siteData.json';
import { getReadingTime } from '@/utils/readingTime';
import ZoomImages from '@/components/Media/ZoomImages.vue';
import { formatDate } from '@/utils/formatDate';
import ReadingProgress from '@/components/Blog/ReadingProgress.astro';
import ScrollSpyToc from '@/components/Blog/ScrollSpyToc.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content, headings = [] } = await post.render();
const readingDuration = getReadingTime(post.body);
const EXCLUDED_HEADINGS_REGEX = /^(ðŸ“‹\s*)?table[-\s]*of[-\s]*contents$/i;
---

<Layout
  title={`${post.data.title} | ${siteData.title}`}
  description={post.data.description}
  pubDate={post.data.pubDate}
  image={post.data.image}
  isPost={true}
>

  <ScrollSpyToc
    sections={
      headings?.filter(h =>
        h.depth === 2 && !EXCLUDED_HEADINGS_REGEX.test(h.text.trim())
      ).map(h => ({
        id: h.slug,
        title: h.text,
      })) ?? []
    }
  />

  <article class="mx-auto max-w-3xl px-6 pt-24 md:pt-36 lg:pt-44">
    <ReadingProgress />

    <header class="text-left mb-12">
      <h1 class="h1 text-pretty text-gradient pb-2">{post.data.title}</h1>

      {post.data.description && <p class="mt-4 text-base text-base-400">{post.data.description}</p>}

      <div class="flex flex-wrap items-center gap-2 text-base-500 text-xs mt-6">
        <span title={formatDate(post.data.pubDate, siteData.language)}>
          {formatDate(post.data.pubDate, siteData.language, { relative: true, relativeLimitDays: 7 })}
        </span>
        <span>Â·</span>
        <span>{readingDuration}</span>
        {
          post.data.author && (
            <>
              <span>Â·</span>
              <span>By {post.data.author}</span>
            </>
          )
        }
      </div>
    </header>

    <div class="flex justify-start mt-6 mb-8">
      <Button href="/blog/" variant="post-ghost" arrow="left" class="hover-button">
        Back to all posts
      </Button>
    </div>

    <div class="mb-16">
      <PostImage src={post.data.image} alt={post.data.title} className="rounded-lg shadow" />
      <SocialShare url={Astro.url} title={post.data.title} tags={post.data.tags} class="mb-8" />
    </div>

    <section class="prose prose-lg mx-auto mb-16 [&_h2]:scroll-mt-24 [&_h3]:scroll-mt-24">
      <Content />
    </section>

    <!-- Vue Island that applies medium-zoom only to images inside the Markdown content -->
    <ZoomImages client:load />

    <div class="flex justify-start mt-16">
      <Button href="/blog/" variant="post-ghost" arrow="left" class="hover-button">
        Back to all posts
      </Button>
    </div>
  </article>
</Layout>
