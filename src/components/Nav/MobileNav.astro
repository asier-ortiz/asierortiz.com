---
import { Icon } from 'astro-icon/components';
import NavLink from '@components/Nav/NavLink.astro';
import Button from '@components/Button/Button.astro';
import navData from '@config/navData.json';
---

<div id="mobile-nav__container">
  <button
    id="mobile-nav__burger"
    aria-label="open navigation menu"
    aria-haspopup="true"
    aria-expanded="false"
    class="primary-focus h-10 w-10 rounded-md"
  >
    <Icon
      name="tabler-menu-2"
      class="m-auto inline-block h-8 w-8 stroke-current"
      aria-hidden="true"
    />
  </button>
  <div
    id="mobile-nav__content"
    class="whitepace-nowrap fixed -right-72 top-0 z-20 hidden h-screen w-72 items-center overflow-x-hidden bg-base-900 text-lg font-normal transition-all duration-300"
  >
    <div class="w-full px-2">
      <div class="mx-1 my-2 flex w-full justify-end pl-6 pr-4">
        <button id="mobile-nav__close" class="primary-focus p-2" aria-label="close navigation menu">
          <Icon name="tdesign:close" class="h-8 w-8" />
        </button>
      </div>
      <hr class="mx-5 border-b-2 border-base-600" />
      <nav>
        <ul class="mx-1 mt-2 text-xl">
          {
            navData.map((navItem) => {
              if (!navItem) {
                console.error('NavItem is undefined:', navItem);
                return null;
              }
              return <NavLink navItem={navItem} />;
            })
          }
        </ul>
      </nav>
      <div class="mx-1 mt-2 w-full px-4">
        <Button variant="primary" class="w-full" href="/contact/"> Contact </Button>
      </div>
    </div>
  </div>
  <button
    id="mobile-nav__backdrop"
    class="mobile-nav__backdrop--fade-out fixed left-0 top-0 z-10 h-screen bg-black"
    aria-label="close navigation menu"></button>
</div>

<style lang="scss">
  .mobile-nav__backdrop--fade-in {
    animation: MobileNavFadeInAnimation ease-in-out 0.3s forwards;
    @apply block w-screen;
  }

  .mobile-nav__backdrop--fade-out {
    @apply hidden w-0 opacity-0;
  }

  @keyframes MobileNavFadeInAnimation {
    0% {
      @apply opacity-0;
    }
    100% {
      @apply opacity-40;
    }
  }

  .mobile-nav--slide-in {
    animation: mobileNavSlideInAnimation ease-in-out 0.3s forwards;
  }

  .mobile-nav--slide-out {
    animation: mobileNavSlideOutAnimation ease-in-out 0.3s forwards;
  }

  @keyframes mobileNavSlideInAnimation {
    0% {
      @apply -right-72;
    }
    100% {
      @apply right-0;
    }
  }

  @keyframes mobileNavSlideOutAnimation {
    0% {
      @apply right-0;
    }
    100% {
      @apply -right-72;
    }
  }
</style>

<script>
  let mobileNavContainer;
  let mobileNavBurger;
  let mobileNavContent;
  let mobileNavCloseBtn;
  let mobileNavBackdrop;

  function toggleMobileNav(event) {
    if (mobileNavBurger && mobileNavContent && mobileNavContainer && mobileNavBackdrop) {
      if (!mobileNavContainer.classList.contains('open')) {
        mobileNavContainer.classList.add('open');
        mobileNavBurger.setAttribute('aria-expanded', 'true');

        mobileNavContent.classList.remove('hidden');
        mobileNavContent.classList.remove('mobile-nav--slide-out');
        mobileNavContent.classList.add('mobile-nav--slide-in');

        mobileNavBackdrop.classList.remove('hidden');
        mobileNavBackdrop.classList.remove('mobile-nav__backdrop--fade-out');
        mobileNavBackdrop.classList.add('mobile-nav__backdrop--fade-in');
      } else {
        mobileNavContainer.classList.remove('open');
        mobileNavBurger.setAttribute('aria-expanded', 'false');

        mobileNavContent.classList.remove('mobile-nav--slide-in');
        mobileNavContent.classList.add('mobile-nav--slide-out');

        setTimeout(() => {
          mobileNavContent?.classList.add('hidden');
        }, 300);

        mobileNavBackdrop.classList.remove('mobile-nav__backdrop--fade-in');
        mobileNavBackdrop.classList.add('mobile-nav__backdrop--fade-out');
      }

      event.preventDefault();
    }
  }

  function highlightNavLink() {
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('a[data-section] span');

    if (!sections.length) return;

    let index = sections.length;

    while (--index && window.scrollY + 30 < sections[index].offsetTop) {}

    navLinks.forEach((link) => link.classList.remove('active-navlink'));
    if (sections[index]) {
      const activeSection = sections[index].id;
      document
        .querySelectorAll(`a[data-section="${activeSection}"] span`)
        .forEach((link) => link.classList.add('active-navlink'));
    }
  }

  function initMobileNav() {
    if (typeof window !== 'undefined') {
      mobileNavContainer = document.getElementById('mobile-nav__container');
      mobileNavBurger = document.getElementById('mobile-nav__burger');
      mobileNavContent = document.getElementById('mobile-nav__content');
      mobileNavCloseBtn = document.getElementById('mobile-nav__close');
      mobileNavBackdrop = document.getElementById('mobile-nav__backdrop');

      if (mobileNavBurger && mobileNavCloseBtn && mobileNavBackdrop) {
        mobileNavBurger.addEventListener('click', toggleMobileNav);
        mobileNavCloseBtn.addEventListener('click', toggleMobileNav);
        mobileNavBackdrop.addEventListener('click', toggleMobileNav);
      }

      highlightNavLink();
      window.addEventListener('scroll', highlightNavLink);
    }
  }

  document.addEventListener('DOMContentLoaded', initMobileNav);
  document.addEventListener('astro:after-swap', initMobileNav);
</script>
